parameters:
  containerServiceEndpoint: 'iUSDevContainer'
  registry: 'iusdev.azurecr.io'
  project: ''
  helmChartLocation: 'application/helm'
  helmChartName: ''
  majorVersion: 0
  stateCode: 0
  autorestClientFeed: ''
  autorestProjectName: ''
  autorestTemplateType: 'Service'

jobs:
  - job: DockerBuilds
    pool:
      vmImage: 'Ubuntu-18.04'
    variables:
      version: 0.0.0.0
      semVersion: 0.0.0
    steps:
      - powershell: |
          helm version
          helm env
          ls /home
          mkdir /home/vsts/.config
          mkdir /home/vsts/.config/helm
        displayName: Show version of things
      - powershell: |
          Write-Host "Attempting to set variable to ${{ parameters.stateCode }}.${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpSemversion = "${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpVersion = "${{ parameters.stateCode }}.$tmpSemversion"

          Write-Host "Set intermeidate variables $tmpSemversion and $tmpVersion"

          Write-Host "##vso[task.setvariable variable=version;]$tmpVersion"
          Write-Host "##vso[task.setvariable variable=semVersion;]$tmpSemversion"
          Write-Host "Setting csproj Version To $(version)"
          Write-Host "Setting semVersion to $(semVersion)"
        displayName: Calculating Version
      - script: |
          find application/ -type f -iname '*.csproj' -exec  sed -i "s/0\.0\.0\-INTERNAL/$(version)/g" "{}" \;
          grep "<VersionPrefix>.*</VersionPrefix>" -R .
        displayName: Set Project Version
      - template: docker/docker-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '${{ parameters.containerServiceEndpoint }}'
          registry: '${{ parameters.registry }}'
          project: '${{ parameters.project }}'
          helmChartLocation: '${{ parameters.helmChartLocation }}'
          helmChartName : '${{ parameters.helmChartName }}'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
          autorestClientFeed: '${{ parameters.autorestClientFeed }}'
          autorestProjectName: '${{ parameters.autorestProjectName }}'
          autorestTemplateType: '${{ parameters.autorestTemplateType }}'
          stateCode: ${{ parameters.stateCode }}

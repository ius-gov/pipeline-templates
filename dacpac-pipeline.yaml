parameters:
  Name : 'DacPac'
  dacpacProject: ''
  nugetConfigPath : 'application/NuGet.Config'
  artifactName: ''
  project: $(project)
  majorVersion: $(majorVersion)
  stateCode: $(stateCode)

jobs:
  - job: ${{ parameters.Name }}
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      version: 0.0.0.0
      semVersion: 0.0.0
    steps:
      - task: MSBuild@1
        inputs:
          configuration: Release
          solution: ${{ parameters.dacpacProject }}
          msbuildArguments:  /p:OutputPath=$(Build.ArtifactStagingDirectory)/${{ parameters.Name }}
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish : '$(Build.ArtifactStagingDirectory)'
          artifactName: artifacts
      - powershell: |
          Write-Host "Attempting to set variable to ${{ parameters.stateCode }}.${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpSemversion = "${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpVersion = "${{ parameters.stateCode }}.$tmpSemversion"
          Write-Host "Set intermeidate variables $tmpSemversion and $tmpVersion"
          Write-Host "##vso[task.setvariable variable=version;]$tmpVersion"
          Write-Host "##vso[task.setvariable variable=semVersion;]$tmpSemversion"
          Write-Host "Setting csproj Version To $(version)"
          Write-Host "Setting semVersion to $(semVersion)"
        displayName: Calculating Version
      - task: UniversalPackages@0
        # condition:
        #   and
        #   (
        #     succeeded(),
        #     or
        #     (
        #       eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        #       and
        #       (
        #         eq(variables['UsingDevelopBranch'], 'true'),
        #         eq(variables['Build.SourceBranch'], 'refs/heads/develop')
        #       )
        #     )
        #   )
        displayName: Universal Publish
        inputs:
          command: 'publish'
          feedsToUse: 'internal'
          publishDirectory: '$(Build.ArtifactStagingDirectory)'
          vstsFeedPublish: 'ius.database.artifact'
          vstsFeedPackagePublish: '${{ parameters.project }}.dacpac-artifact'
          versionOption: 'custom'
          versionPublish: '$(semVersion)'
          packagePublishDescription: 'dacpac artifact for ${{ parameters.project }}'
